<chapter xml:id="ch_logic">
    <title>Logic</title>

    <introduction>
        <p>
            Logic is, basically, the study of valid reasoning. When searching the internet, we use Boolean logic – terms like <q>and</q> and <q>or</q> – to help us find specific web pages that fit in the sets we are interested in. After exploring this form of logic, we will look at logical arguments and how we can determine the validity of a claim.
        </p>
    </introduction>

    <section xml:id="sec_boolean">  <!-- COMPLETE 11/28/2020 -->
        <title>Boolean Logic</title>

        <objectives>
            <ol>
                <li><p>Use and interpret Boolean logic expressions.</p></li>
            </ol>
        </objectives>

        <p>
            We can often classify items as belonging to sets. If you went the library to search for a book and they asked you to express your search using unions, intersections, and complements of sets, that would feel a little strange. Instead, we typically using words like <q>and</q>, <q>or</q>, and <q>not</q> to connect our keywords together to form a search. These words, which form the basis of <term>Boolean logic</term>, are directly related to our <xref ref="sec_setoperations" text="custom">set operations</xref>. (Boolean logic was developed by the 19<sup>th</sup>-century English mathematician George Boole.)
        </p>

        <definition xml:id="def_boolean">
            <title>Boolean Logic</title>
            <statement>
                <p>
                    Boolean logic combines multiple statements that are either true or false into an expression that is either true or false.
                </p>
                <p>
				    In connection to sets, a search is true if the element is part of the set.
		    	</p>    
            </statement>
        </definition>

        <video youtube="ZOLinnoXEAw"/>

        <p>
            Suppose <em>M</em> is the set of all mystery books, and <em>C</em> is the set of all comedy books. If we search for <q>mystery</q>, we are looking for all the books that are an element of the set <em>M</em>; the search is true for books that are in the set.
        </p>

        <p>
            When we search for <q>mystery <em>and</em> comedy</q>, we are looking for a book that is an element of both sets, in the intersection. If we were to search for <q>mystery <em>or</em> comedy</q>, we are looking for a book that is a mystery, a comedy, or both, which is the union of the sets. If we searched for <q><em>not</em> comedy</q>, we are looking for any book in the library that is not a comedy, the complement of the set <em>C</em>.
        </p>

        <definition xml:id="def_connectives">
            <title>Connection to Set Operations</title>
            <statement>
                <p>
                    <md>
                        <mrow>A\text{ and }B &amp;&amp; \text{elements in the intersection } A\cap B</mrow>
                        <mrow>A\text{ or }B &amp;&amp; \text{elements in the union } A\cup B</mrow>
                        <mrow>\text{not }A &amp;&amp; \text{elements in the complement } A^c</mrow>
                   </md>
                </p>
            </statement>
        </definition>

        <video youtube="7tm-sDKCnO4"/>

        <p>
            Notice here that <em>or</em> is not exclusive. This is a difference between the Boolean logic use of the word and common everyday use. When your significant other asks <q>do you want to go to the park or the movies?</q> they usually are proposing an exclusive choice – one option or the other, but not both. In Boolean logic, the <em>or</em> is not exclusive – more like being asked at a restaurant <q>would you like fries or a drink with that?</q> Answering <q>both, please</q> is an acceptable answer.
        </p>

        <remark xml:id="ex_boolean1">
            <p>
				Suppose we are searching a library database for Mexican universities. Express a reasonable search using Boolean logic.
			</p>

			<p>
				We could start with the search <q>Mexico <em>and</em> university</q>, but would be likely to find results for the U.S. state New Mexico. To account for this, we could revise our search to read:
			</p>

			<p>
				Mexico <em>and</em> university <em>not</em> <q>New Mexico</q>
			</p>
        </remark>

        <remark xml:id="ex_boolean2">
            <p>
				Describe the numbers that meet the condition:
			</p>

			<p>
				even <em>and</em> less than 10 <em>and</em> greater than 0.
			</p>

            <p>
				The numbers that satisfy all three requirements are <m>\{2, 4, 6, 8\}</m>.
			</p>
        </remark>

        <p>
				Sometimes statements made in English can be ambiguous. For this reason, Boolean logic uses parentheses to show precedence, just like in algebraic order of operations.
        </p>

        <remark xml:id="ex_boolean3">
            <p>
				Describe the numbers that meet the condition:
			</p>

			<p>
				odd number <em>and</em> less than 20 <em>and</em> greater than 0 <em>and</em> (multiple of 3 <em>or</em> multiple of 5).
			</p>

            <p>
				The first three conditions limit us to the set <m>\{1, 3, 5, 7, 9, 11, 13, 15, 17, 19\}</m>.
			</p>

			<p>
				The last grouped conditions tell us to find elements of this set that are also either a multiple of 3 or a multiple of 5. This leaves us with the set <m>\{3, 5, 9, 15\}</m>.
			</p>

            <p>
				Notice that we would have gotten a very different result if we had written
			</p>

			<p>
				(odd number <em>and</em> less than 20 <em>and</em> greater than 0 <em>and</em> multiple of 3) <em>or</em> multiple of 5.
			</p>

			<p>
				The first grouped set of conditions would give <m>\{3, 9, 15\}</m>. When combined with the last condition, though, this set expands without limits:
			    <me>
				\{3, 5, 9, 15, 20, 25, 30, 35, 40, 45, \ldots\}.
                </me>
			</p>
        </remark>

        <remark xml:id="ex_boolean4">
            <p>
				The English phrase <q>Go to the store and buy me eggs and bagels or cereal</q> is ambiguous; it is not clear whether the requestors is asking for eggs always along with either bagels or cereal, or whether they’re asking for either the combination of eggs and bagels, or just cereal.
			</p>

			<p>
				For this reason, using parentheses clarifies the intent:
			

			<md>
                <mrow>
				    \text{Eggs and (bagels or cereal) } &amp;\text{means}&amp; \text{Option 1: Eggs and bagels, Option 2: Eggs and cereal}</mrow>
                <mrow>
				    \text{(Eggs and bagels) or cereal } &amp;\text{means}&amp; \text{Option 1: Eggs and bagels, Option 2: Cereal}</mrow>
            </md>
			</p>
        </remark>

        <p>
            Be aware that when a string of conditions is written without grouping symbols, it is often interpreted from the left to right, resulting in the latter interpretation.
        </p>

        <exercises xml:id="exercises_boolean">
            <p>For questions 1-2, list the set of integers that satisfy the given conditions.</p>

            <exercise>
                <statement>
                    <p>
                         A positive multiple of 5 and not a multiple of 2.
                    </p>
                </statement>
                <answer>
                    <p>
                       <m>\{5, 15, 25, \ldots \}</m>.
                    </p>
                </answer>
            </exercise>

            <exercise>
                <statement>
                    <p>
                         Greater than 12 and less than or equal to 18.
                    </p>
                </statement>
            </exercise>

        </exercises>

    </section>

    <section xml:id="sec_conditional"> <!-- COMPLETE 11/30/2020, NO EXERCISES -->
        <title>Conditional Statements</title>

        <objectives> <!-- Added MS -->
            <ol>
                <li>
                    <p>
                        Identify, and write spreadsheet formulas that implement, conditional statements.
                    </p>
                </li>
            </ol>
        </objectives>
        

        <p>
				Beyond searching, Boolean logic is commonly used in spreadsheet applications like <em>Excel</em> to do conditional calculations. A <term>statement</term> is something that is either true or false. A statement like <m>3 \lt 5</m> is true; a statement like <q>a rat is a fish</q> is false. A statement like <q><m>x \lt 5</m></q> is true for some values of <em>x</em> and false for others. When an action is taken or not depending on the value of a statement, it forms a <term>conditional</term>.
        </p>

        <definition xml:id="def_conditional">
            <title>Statements and Conditionals</title>
            <statement>
            <p>
				A <term>statement</term> is either true or false.
			</p>

			<p>
				A <term>conditional</term> is a compound statement of the form
			</p>

			<p>
				<q>if <em>p</em> then <em>q</em></q> or <q>if <em>p</em> then <em>q</em>, else <em>s</em></q>.
			</p>
            </statement>
        </definition>

        <video youtube="oEr27P1bX9o"/>

        <remark xml:id="ex_conditional1">
            <statement>
                <p>
                    In common language, an example of a conditional statement would be <q>If it is raining, then we’ll go to the mall. Otherwise we’ll go for a hike.</q>
			    </p>

			    <p>
                    The statement <q>If it is raining</q> is the condition – this may be true or false for any given day. If the condition is true, then we will follow the first course of action, and go to the mall. If the condition is false, then we will use the alternative, and go for a hike.
			    </p>
            </statement>
        </remark>   

        <video youtube="iKN-QpBLkyM"/>

        <remark xml:id="ex_conditional2">
            <p>
				As mentioned earlier, conditional statements are commonly used in spreadsheet applications like Excel or Google Sheets. In Excel, you can enter an expression like
			</p>

			<c>
				=IF(A1&lt;2000, A1+1, A1*2)
			</c>.

			<p>
				Notice that after the IF, there are three parts. The first part is the condition, and the second two are calculations. Excel will look at the value in cell A1 and compare it to 2000. If that condition is true, then the first calculation is used, and 1 is added to the value of A1 and the result is stored. If the condition is false, then the second calculation is used, and A1 is multiplied by 2 and the result is stored.
			</p>

			<p>
				In other words, this statement is equivalent to saying <q>If the value of A1 is less than 2000, then add 1 to the value in A1. Otherwise, multiply A1 by 2</q>.
			</p>
        </remark>

        <remark xml:id="ex_conditional3">
            <p>
				The expression <c>=IF(A1&gt;5, 2*A1, 3*A1)</c> is used. Find the result if A1 is 3, and the result if A1 is 8.
			</p>

			<p>
				This is equivalent to saying
			</p>

			<p>
				If A1 &gt; 5, then calculate 2*A1. Otherwise, calculate 3*A1.
			</p>

			<p>
				If A1 is 3, then the condition is false, since 3 &gt; 5 is not true, so we do the alternate action, and multiply by 3, giving 3*3 = 9.
			</p>

			<p>
				If A1 is 8, then the condition is true, since 8 &gt; 5, so we multiply the value by 2, giving 2*8=16.
			</p>
        </remark>

        <remark xml:id="ex_conditional4">
            <p>
				An accountant needs to withhold 15% of income for taxes if the income is below $30,000, and 20% of income if the income is $30,000 or more. Write an expression that would calculate the amount to withhold.
			</p>

			<p>
				Our conditional needs to compare the value to 30,000. If the income is less than 30,000, we need to calculate 15% of the income: 0.15*income. If the income is more than 30,000, we need to calculate 20% of the income: 0.20*income.
			</p>

			<p>
				In words we could write <q>If income &lt; 30,000, then multiply by 0.15, otherwise multiply by 0.20</q>. In Excel, we would write:
			</p>

			<p>
				<c>=IF(A1&lt;30000, 0.15*A1, 0.20*A1)</c>
			</p>
        </remark>

        <p>
            As we did earlier, we can create more complex conditions by using the operators <em>and</em>, <em>or</em>, and <em>not</em> to join simpler conditions together.
        </p>

        <remark xml:id="ex_conditional5">
            <p>
				A parent might say to their child <q>if you clean your room and take out the garbage, then you can have ice cream.</q>
			</p>

			<p>
				Here, there are two simpler conditions:
			</p>

			<p>
				1) The child cleaning her room
			</p>

			<p>
				2) The child taking out the garbage
			</p>

			<p>
				Since these conditions were joined with <em>and</em>, the combined conditional will be true only if both simpler conditions are true; if either chore is not completed, then the parent’s condition is not met.
			</p>

			<p>
				Notice that if the parent had said <q>if you clean your room <em>or</em> take out the garbage, then you can have ice cream</q>, then the child would need to complete only one chore to meet the condition.
			</p>
        </remark>

        <p>
            Suppose you wanted to have something happen when a certain value is between 100 and 300. To create the condition <q>A1 &lt; 300 and A1 &gt; 100</q> in Excel, you would need to enter <c>AND(A1&lt;300, A1&gt;100)</c>. Likewise, for the condition <q>A1=4 or A1=6</q> you would enter <c>OR(A1=4, A1=6)</c>.
        </p>

        <remark xml:id="ex_conditional6">
            <p>
				In a spreadsheet, cell A1 contains annual income, and A2 contains number of dependents.
			</p>

			<p>
				A certain tax credit applies if someone with no dependents earns less than $10,000, or if someone with dependents earns less than $20,000. Write a rule that describes this.
			</p>

			<p>
				There are two ways the rule is met:
			</p>

			<p>
				income is less than 10,000 <em>and</em> dependents is 0, <em>or</em>
			</p>

			<p>
				income is less than 20,000 <em>and</em> dependents is not 0.
			</p>

			<p>
				Informally, we could write these as
			</p>

			<p>
				(A1 &lt; 10000 <em>and</em> A2 = 0) <em>or</em> (A1 &lt; 20000 <em>and</em> A2 &gt; 0)
			</p>

			<p>
				In Excel’s format, we’d write
			</p>

			<p>
				<c>IF(OR(AND(A1&lt;10000, A2=0), AND(A1&lt;20000, A2&gt;0)), "you qualify", "you don’t qualify")
			</c>.</p>
        </remark>

    </section>

    <section xml:id="sec_quantified">  <!-- COMPLETE 12/14/2020, NO EXERCISES -->
        <title>Quantified Statements</title>

        <objectives> <!-- ADDED MS -->
            <ol>
                <li>
                    <p>
                        Identify and evaluate logical statements involving universal and existential quantifiers.
                    </p>
                </li>
            </ol>
        </objectives>
        
        
        <p>
				Words that describe an entire set, such as <q>all</q>, <q>every</q>, or <q>none</q>, are called <term>universal quantifiers</term> because that set could be considered a universal set. In contrast, words or phrases such as <q>some</q>, <q>one</q>, or <q>at least one</q> are called <term>existential quantifiers</term> because they describe the existence of at least one element in a set.
		</p>

        <definition xml:id="def_quantifiers">
            <title>Quantifiers</title>
            <statement>
                <p>
				    A <term>universal quantifier</term> states that an entire set of things share a characteristic.
			    </p>

			    <p>
				    An <term>existential quantifier</term> states that a set contains at least one element.
			    </p>
            </statement>
        </definition>

        <p>
            Something interesting happens when we <term>negate</term> – or state the opposite of – a quantified statement.
        </p>

        <remark xml:id="ex_quantified1">
            <p>
				Suppose your friend says <q>Everybody cheats on their taxes.</q> What is the minimum amount of evidence you would need to prove your friend wrong?
			</p>

			<p>
				To show that it is not true that everybody cheats on their taxes, all you need is <em>one</em> person who does not cheat on their taxes. It would be perfectly fine to produce more people who do not cheat, but one counterexample is all you need.
			</p>

			<p>
				It is important to note that you do <em>not</em> need to show that absolutely nobody cheats on their taxes.
			</p>
        </remark>

        <remark xml:id="ex_quantified2">
            <p>
				Suppose your friend says <q>One of these six cartons of milk is leaking.</q> What is the minimum amount of evidence you would need to prove your friend wrong?
			</p>

			<p>
				In this case, you would need to check <em>all</em> six cartons and show that none of them is leaking. You cannot disprove your friend’s statement by checking only one of the cartons.
			</p>
        </remark>

        <p>
			When we negate a statement with a universal quantifier, we get a statement with an existential quantifier, and vice-versa.
        </p>

        <theorem xml:id="thm_negations">
            <title>Negating a quantified statement</title>
            <statement>
                <p>
				    The negation of <q>all A are B</q> is <q>at least one A is not B</q>.
                </p>

                <p>
                    The negation of <q>no A are B</q> is <q>at least one A is B</q>.
                </p>

                <p>
                    The negation of <q>at least one A is B</q> is <q>no A are B</q>.
                </p>

                <p>
                    The negation of <q>at least one A is not B</q> is <q>all A are B</q>.
                </p>
            </statement>
        </theorem>

        <remark xml:id="ex_quantified3">
            <p>
				<q>Somebody brought a flashlight.</q> Write the negation of this statement.
			</p>

			<p>
				The negation is <q>Nobody brought a flashlight.</q>
			</p>
        </remark>

        <remark xml:id="ex_quantified4">
            <p>
				<q>There are no prime numbers that are even.</q> Write the negation of this statement.
			</p>

			<p>
				The negation is <q>At least one prime number is even.</q>
			</p>
        </remark>

        <problem xml:id="tin_quantified1">
            <statement>
                <p>
				    Write the negation of <q>All Icelandic children learn English in school.</q>
			    </p>    
            </statement>
            <answer>
                <p>
                    The negation is <q>At least one Icelandic child does not learn English in school.</q>
                </p>
            </answer>
        </problem>

    </section>

    <section xml:id="sec_truthtables1">
        <title>Truth Tables I</title>
        
        <objectives>
            <ol>
                <li>
                    <p>
                        
                    </p>
                </li>
            </ol>
        </objectives>
        

        <p>
				Before we focus on truth tables, we’re going to introduce some symbols that are commonly used for <em>and</em>, <em>or</em>, and <em>not</em>.
        </p>

        <definition xml:id="def_compound">
            <title>Symbols for Compound Statements</title>

            <statement>
                <p>
				    The symbol <m>\wedge</m> is used for <em>and</em>: <em>A</em> and <em>B</em> is notated <m>A\wedge B</m>
                </p>

                <p>
                    The symbol <m>\vee</m> is used for <em>or</em>: <em>A</em> or <em>B</em> is notated <m>A\vee B</m>
                </p>

                <p>
                    The symbol <m>\sim</m> is used for <em>not</em>: not <em>A</em> is notated <m>\sim A</m>
                </p>
            </statement>
        </definition>

        <p>
            You can remember the first two symbols by relating them to the shapes for the union and intersection. <m>A\wedge B</m> would be the elements that exist in both sets, in <m>A\cap B</m>. Likewise, <m>A\vee B</m> would be the elements that exist in either set, in <m>A\cup B</m>. When we are working with sets, we use the rounded version of the symbols; when we are working with statements, we use the pointy version.
        </p>

        <remark xml:id="ex_truth1">
            <p>
				Translate each statement into symbolic notation. Let <em>P</em> represent <q>I like Pepsi</q> and let <em>C</em> represent <q>I like Coke</q>.
			</p>

			<p>
				1. I like Pepsi or I like Coke.
			</p>

			<p>
				2. I like Pepsi and I like Coke.
			</p>

			<p>
				3. I do not like Pepsi.
			</p>

			<p>
				4. It is not the case that I like Pepsi or Coke.
			</p>

			<p>
				5. I like Pepsi and I do not like Coke.
			</p>

            <ol>
                <li>
                    <p>
                        <m>P \vee C</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>P \wedge C</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>\sim P</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>\sim(P\vee C)</m>
                    </p>
                </li>
                <li>
                    <p>
                        <m>P \wedge \sim C</m>
                    </p>
                </li>
            </ol>
        </remark>

        <p>
            As you can see, we can use parentheses to organize more complicated statements.
        </p>

        <problem xml:id="tin_truth1">
            <statement>
                <p>
				    Translate <q>We have carrots or we will not make soup</q> into symbols. Let <em>C</em> represent <q>we have carrots</q> and let <em>S</em> represent <q>we will make soup</q>.
			    </p>
            </statement>
            <answer>
                <p>
                    <m>C \vee \sim S</m>
                </p>
            </answer>
        </problem>

        <p>
            Because complex Boolean statements can get tricky to think about, we can create a <term>truth table</term> to keep track of what truth values for the simple statements make the complex statement true and false.
        </p>

        <definition xml:id="def_truthtable">
            <title>Truth table</title>
            <statement>
                <p>
				    A table showing what the resulting truth value of a complex statement is for all the possible truth values for the simple statements.
		    	</p>
            </statement>
        </definition>

        <video youtube="_5Z_0824RHw"/> <!-- Truth Tables for Compound Statements-->

        <remark xml:id="ex_truth2">
            <statement>
                <p>
				Suppose you’re picking out a new couch, and your significant other says <q>get a sectional <em>or</em> something with a chaise</q>.
			    </p>

                <p>
                    This is a complex statement made of two simpler conditions: <q>is a sectional</q>, and <q>has a chaise</q>. For simplicity, let’s use <em>S</em> to designate <q>is a sectional</q>, and <em>C</em> to designate <q>has a chaise</q>.
                </p>

                <p>
                    A truth table for this situation would look like this:
                </p>

                <table xml:id="tab_truth1">
                    <tabular halign="center">
                        <row bottom="medium">
                        <cell>
                            S
                        </cell>
                        <cell>
                            C
                        </cell>
                        <cell>
                            S or C
                        </cell>
                        </row>
                        <row>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        </row>
                        <row>
                        <cell>
                            T
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            T
                        </cell>
                        </row>
                        <row>
                        <cell>
                            F
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        </row>
                        <row>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        </row>
                    </tabular>
                </table>

                <p>
                    In the table, T is used for true, and F for false. In the first row, if <em>S</em> is true and <em>C</em> is also true, then the complex statement <q><em>S</em> or <em>C</em></q> is true. This would be a sectional that also has a chaise, which meets our desire. (Remember that <em>or</em> in logic is not exclusive; if the couch has both features, it meets the condition.)
                </p>
            </statement>
        </remark>

        <p>
            In the previous example about the couch, the truth table was really just summarizing what we already know about how the <em>or</em> statement work. The truth tables for the basic <em>and</em>, <em>or</em>, and <em>not</em> statements are shown below.
		</p>

        <theorem xml:id="thm_basictruth">
            <title>Basic truth tables</title>
            <statement>
                <table>
                <tabular halign="center">
                    <row>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        Conjunction
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        Disjunction
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        Negation
                    </cell>
                    </row>
                    <row>
                    <cell bottom="medium">
                        <m>A​</m>
                    </cell>
                    <cell bottom="medium">
                        <m>B</m>
                    </cell>
                    <cell bottom="medium">
                        <m>​A\wedge B</m>
                    </cell>
                    <cell>
                    </cell>
                    <cell bottom="medium">
                        <m>A</m>
                    </cell>
                    <cell bottom="medium">
                        <m>B​</m>
                    </cell>
                    <cell bottom="medium">
                        <m>A\vee B​</m>
                    </cell>
                    <cell>
                    </cell>
                    <cell bottom="medium">
                        <m>A</m>
                    </cell>
                    <cell bottom="medium">
                        <m>\sim A​</m>
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    <cell>
                    </cell>
                    </row>
                </tabular>
                </table>
            </statement>
        </theorem>

        <p>
            Truth tables really become useful when we analyze more complex Boolean statements.
        </p>

        <remark xml:id="ex_truth3">
            <p>
				Create a truth table for the statement <m>A\vee{} \sim B</m>.
			</p>

            <p>
				When we create the truth table, we need to list all the possible truth value combinations for <em>A</em> and <em>B</em>. Notice how the first column contains 2 Ts followed by 2 Fs, and the second column alternates T, F, T, F. This pattern ensures that all 4 combinations are considered.
			</p>

            <table>
                <tabular halign="center">
                    <row bottom="medium">
                    <cell>
                        <m>​A</m>
                    </cell>
                    <cell>
                        <m>B​</m>
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                </tabular>
            </table>

            <p>
				After creating columns with those initial values, we create a third column for the expression <m>\sim B</m>. Now we will temporarily ignore the column for <em>A</em> and write the truth values for <m>\sim B</m>.
			</p>

            <table>
                <tabular halign="center">
                    <row bottom="medium">
                    <cell>
                        <m>​A</m>
                    </cell>
                    <cell>
                        <m>B​</m>
                    </cell>
                    <cell>
                        <m>\sim B​</m>
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                </tabular>
            </table>

            <p>
				Next we can find the truth values of <m>A\vee{} \sim B</m>, using the first and third columns.
			</p>

            <table>
                <tabular halign="center">
                    <row bottom="medium">
                    <cell>
                        <m>A​</m>
                    </cell>
                    <cell>
                        <m>B​</m>
                    </cell>
                    <cell>
                        <m>​\sim B</m>
                    </cell>
                    <cell>
                        <m>A\vee{} \sim B​</m>
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    </row>
                    <row>
                    <cell>
                        F
                    </cell>
                    <cell>
                        F
                    </cell>
                    <cell>
                        T
                    </cell>
                    <cell>
                        T
                    </cell>
                    </row>
                </tabular>
            </table>

            <p>
                The truth table shows that <m>A\vee{}\sim B</m> is true in three cases and false in one case. 
            </p>
                
            <p>
                If you’re wondering what the point of this is, suppose it is the last day of the baseball season and two teams, who are not playing each other, are competing for the final playoff spot. Anaheim will make the playoffs if it wins its game <em>or</em> if Boston does not win its game. (Anaheim owns the tie-breaker; if both teams win, or if both teams lose, then Anaheim gets the playoff spot.)
            </p>
            <p> 
                If <em>A</em> = Anaheim wins its game and <em>B</em> = Boston wins its game, then <m>A\vee{}\sim B</m> represents the situation <q>Anaheim wins its game or Boston does not win its game</q>. The truth table shows us the different scenarios related to Anaheim making the playoffs.
            </p>
            <p>
                In the first row, Anaheim wins its game and Boston wins its game, so it is true that Anaheim makes the playoffs. In the second row, Anaheim wins and Boston does not win, so it is true that Anaheim makes the playoffs. In the third row, Anaheim does not win its game and Boston wins its game, so it is <em>false</em> that Anaheim makes the playoffs. In the fourth row, Anaheim does not win and Boston does not win, so it is true that Anaheim makes the playoffs.
			</p>


        </remark>

        <problem xml:id="tin_truth2">
            <statement>
                <p>
                    Create a truth table for this statement: <m>\mathop\sim A \wedge B</m>.
                </p>
            </statement>
            <answer>
                <table>
                    <tabular halign="center">
                        <row bottom="medium">
                        <cell>
                            <m>A​</m>
                        </cell>
                        <cell>
                            <m>B​</m>
                        </cell>
                        <cell>
                            <m>\sim A​</m>
                        </cell>
                        <cell>
                            <m>\sim A \wedge B​</m>
                        </cell>
                        </row>
                        <row>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        </row>
                        <row>
                        <cell>
                            T
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        </row>
                        <row>
                        <cell>
                            F
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            T
                        </cell>
                        </row>
                        <row>
                        <cell>
                            F
                        </cell>
                        <cell>
                            F
                        </cell>
                        <cell>
                            T
                        </cell>
                        <cell>
                            F
                        </cell>
                        </row>
                    </tabular>
                </table>
            </answer>
        </problem>

        <remark xml:id="ex_truth4">
            <statement>
                <p>
				    Create a truth table for the statement <m>A \wedge {} \sim\!(B\vee C)</m>.
                </p>

                <p>
				    It helps to work from the inside out when creating a truth table, and to create columns in the table for intermediate operations. We start by listing all the possible truth value combinations for <em>A</em>, <em>B</em>, and <em>C</em>. 
		    	</p>

                <table>
                    <tabular halign="center">
                    <row header="yes">
                        <cell bottom="medium"><em>A</em></cell>
                        <cell bottom="medium"><em>B</em></cell>
                        <cell bottom="medium"><em>C</em></cell>
                        <cell bottom="medium"><em>B</em> ⋁ <em>C</em></cell>
                    </row>
                    <row class="odd">
                        <cell>T</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                    </row>
                    <row class="even">
                        <cell>T</cell>
                        <cell>T</cell>
                        <cell>F</cell>
                        <cell>T</cell>
                    </row>
                    <row class="odd">
                        <cell>T</cell>
                        <cell>F</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                    </row>
                    <row class="even">
                        <cell>T</cell>
                        <cell>F</cell>
                        <cell>F</cell>
                        <cell>F</cell>
                    </row>
                    <row class="odd">
                        <cell>F</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                    </row>
                    <row class="even">
                        <cell>F</cell>
                        <cell>T</cell>
                        <cell>F</cell>
                        <cell>T</cell>
                    </row>
                    <row class="odd">
                        <cell>F</cell>
                        <cell>F</cell>
                        <cell>T</cell>
                        <cell>T</cell>
                    </row>
                    <row class="even">
                        <cell>F</cell>
                        <cell>F</cell>
                        <cell>F</cell>
                        <cell>F</cell>
                    </row>
                    </tabular>
                </table>

                <p>
                    Notice how the first column contains 4 Ts followed by 4 Fs, the second column contains 2 Ts, 2 Fs, then repeats, and the last column alternates T, F, T, F... This pattern ensures that all 8 combinations are considered. After creating columns with those initial values, we create a fourth column for the innermost expression, <m>B\vee C</m>. Now we will temporarily ignore the column for <em>A</em> and focus on <em>B</em> and <em>C</em>, writing the truth values for <m>B\vee C</m>.
                </p>





            </statement>

        </remark>

    </section>    

    <section xml:id="sec_truthtables2">
        <title>Truth Tables II</title>
        

        <video youtube="https://www.youtube.com/watch?v=9rz_iC2t0iE"/> <!-- When Are Conditional Statements True? In Language and Truth Tables -->

        <video youtube="https://www.youtube.com/watch?v=2npo-L0DJRQ"/> <!-- Truth Tables for Conditional Statements-->

        <video youtube="https://www.youtube.com/watch?v=-r8FzV84sj8"/> <!-- Truth Tables for Biconditional Statements-->

        <video youtube="https://www.youtube.com/watch?v=hfz1gAoNd1w"/> <!-- Truth Tables for Equivalence -->

    </section>

    <section xml:id="sec_demorgan">
        <title>De Morgan's Laws</title>
        
    </section>  

     <section xml:id="sec_arguments">
        <title>Arguments and Fallacies</title>
        
    </section>   

</chapter>